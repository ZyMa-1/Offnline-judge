#include <bits/stdc++.h>#include <complex>#define pb push_back#define fi first#define se second#define si size()#define ll long long#define mp make_pair#define iter ::iterator#define all(v) v.begin(), v.end()#define READ(f) freopen (f, "r", stdin)#define WRITE(f) freopen (f, "w", stdout)#define pp pop_back#define mapiter map<int, int>::iterator#define pii pair<int, int>#define forn(i, n) for(int i = 0; i < n; ++i)#define forn1(i, n) for(int i = 1; i <= n; ++i)#define forr(i, x, n) for(int i = x; i <= n; ++i)#define r0 return 0#define barnarnar ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);#define lld double#define X real()#define Y imag() const int inf = 1e9 + 1;const ll modw = 1e9 + 7;  using namespace std; bool ifpr(int n){    int i = 2;    while(i * i <= n)    {        if(n % i == 0)  r0;        i++;    }    return 1;} vector<int> ss(ll n){    int i = 2;    vector<int> ans;    int cn = n;    while(i * i <= cn)    {        if(n % i == 0 && ifpr(i))        {            if(i == 2 && ifpr(n / i) && n != 4) ans.pb(n / i);            while(n % i == 0)            {                ans.pb(i);                n /= i;            }        }        i++;    }    if(n != 1)  ans.pb(n);    return ans;} int main(){    barnarnar    int n;    cin >> n;    vector<int> ans = ss(n);    sort(all(ans));    forn(i, ans.si)    {        cout << ans[i];        if(i < ans.si - 1)  cout << ' ';    }    r0;}